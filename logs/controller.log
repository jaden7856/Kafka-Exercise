[2021-04-27 05:01:00,987] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@4b6995df, name=log4j:logger=kafka.controller (kafka.controller)
[2021-04-27 05:01:24,813] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-04-27 05:01:24,902] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2021-04-27 05:01:24,929] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2021-04-27 05:01:25,075] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2021-04-27 05:01:25,086] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2021-04-27 05:01:25,098] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2021-04-27 05:01:25,104] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2021-04-27 05:01:25,142] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 24) (kafka.controller.KafkaController)
[2021-04-27 05:01:25,152] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2021-04-27 05:01:25,171] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2021-04-27 05:01:25,197] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2021-04-27 05:01:25,199] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2021-04-27 05:01:25,200] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2021-04-27 05:01:25,201] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2021-04-27 05:01:25,200] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2021-04-27 05:01:25,207] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2021-04-27 05:01:25,209] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2021-04-27 05:01:25,210] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2021-04-27 05:01:25,211] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2021-04-27 05:01:25,213] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2021-04-27 05:01:25,249] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2021-04-27 05:01:25,261] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-04-27 05:01:25,273] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-H380DM7.mshome.net:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2021-04-27 05:01:25,274] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-04-27 05:01:25,275] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2021-04-27 05:01:25,278] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2021-04-27 05:01:25,280] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2021-04-27 05:01:25,287] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2021-04-27 05:01:25,289] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2021-04-27 05:01:25,302] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2021-04-27 05:01:25,303] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2021-04-27 05:01:25,303] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2021-04-27 05:01:25,304] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2021-04-27 05:01:25,306] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2021-04-27 05:01:25,341] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2021-04-27 05:01:25,543] INFO [Controller id=0] New topics: [Set(my_topic_festival)], deleted topics: [HashSet()], new partition replica assignment [Map(my_topic_festival-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-04-27 05:01:25,544] INFO [Controller id=0] New partition creation callback for my_topic_festival-0 (kafka.controller.KafkaController)
[2021-04-27 05:01:25,820] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-04-27 05:01:25,821] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2021-04-27 05:01:30,355] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-04-27 05:01:30,357] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-04-27 05:01:30,364] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-04-27 05:01:30,365] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-04-27 05:02:05,967] INFO [Controller id=0] New topics: [Set(my_topic_users)], deleted topics: [HashSet()], new partition replica assignment [Map(my_topic_users-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-04-27 05:02:05,967] INFO [Controller id=0] New partition creation callback for my_topic_users-0 (kafka.controller.KafkaController)
[2021-04-27 05:02:06,336] INFO [Controller id=0] New topics: [Set(my_topic_store)], deleted topics: [HashSet()], new partition replica assignment [Map(my_topic_store-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-04-27 05:02:06,336] INFO [Controller id=0] New partition creation callback for my_topic_store-0 (kafka.controller.KafkaController)
[2021-04-27 05:02:06,436] INFO [Controller id=0] New topics: [HashSet(my_topic_menu)], deleted topics: [HashSet()], new partition replica assignment [Map(my_topic_menu-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-04-27 05:02:06,437] INFO [Controller id=0] New partition creation callback for my_topic_menu-0 (kafka.controller.KafkaController)
[2021-04-27 05:06:30,374] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-04-27 05:06:30,374] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-04-27 05:06:30,378] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-04-27 05:06:30,378] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-04-27 05:11:30,384] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-04-27 05:11:30,384] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-04-27 05:11:30,386] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-04-27 05:11:30,386] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-04-27 05:14:41,017] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@4b6995df, name=log4j:logger=kafka.controller (kafka.controller)
[2021-04-27 05:15:16,079] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@4b6995df, name=log4j:logger=kafka.controller (kafka.controller)
[2021-04-27 05:15:31,200] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-04-27 05:15:31,279] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2021-04-27 05:15:31,295] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2021-04-27 05:15:31,500] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2021-04-27 05:15:31,509] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2021-04-27 05:15:31,519] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2021-04-27 05:15:31,526] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2021-04-27 05:15:31,626] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 24) (kafka.controller.KafkaController)
[2021-04-27 05:15:31,635] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2021-04-27 05:15:31,649] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2021-04-27 05:15:31,716] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2021-04-27 05:15:31,718] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2021-04-27 05:15:31,719] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2021-04-27 05:15:31,721] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2021-04-27 05:15:31,727] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2021-04-27 05:15:31,728] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2021-04-27 05:15:31,729] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2021-04-27 05:15:31,729] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2021-04-27 05:15:31,732] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2021-04-27 05:15:31,751] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2021-04-27 05:15:31,765] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2021-04-27 05:15:31,766] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-04-27 05:15:31,782] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-04-27 05:15:31,786] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2021-04-27 05:15:31,787] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2021-04-27 05:15:31,789] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2021-04-27 05:15:31,791] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-H380DM7.mshome.net:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2021-04-27 05:15:31,797] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2021-04-27 05:15:31,803] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2021-04-27 05:15:31,819] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2021-04-27 05:15:31,823] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2021-04-27 05:15:31,824] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2021-04-27 05:15:31,825] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2021-04-27 05:15:31,835] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2021-04-27 05:15:31,907] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2021-04-27 05:15:32,056] INFO [Controller id=0] New topics: [Set(my_topic_store, my_topic_festival)], deleted topics: [HashSet()], new partition replica assignment [Map(my_topic_store-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), my_topic_festival-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-04-27 05:15:32,058] INFO [Controller id=0] New partition creation callback for my_topic_store-0,my_topic_festival-0 (kafka.controller.KafkaController)
[2021-04-27 05:15:32,301] INFO [Controller id=0] New topics: [Set(my_topic_menu)], deleted topics: [HashSet()], new partition replica assignment [Map(my_topic_menu-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-04-27 05:15:32,302] INFO [Controller id=0] New partition creation callback for my_topic_menu-0 (kafka.controller.KafkaController)
[2021-04-27 05:15:32,443] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-04-27 05:15:32,444] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2021-04-27 05:15:32,881] INFO [Controller id=0] New topics: [HashSet(my_topic_users)], deleted topics: [HashSet()], new partition replica assignment [Map(my_topic_users-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-04-27 05:15:32,881] INFO [Controller id=0] New partition creation callback for my_topic_users-0 (kafka.controller.KafkaController)
[2021-04-27 05:15:36,935] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-04-27 05:15:36,937] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-04-27 05:15:36,968] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-04-27 05:15:36,971] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-04-27 05:20:36,986] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-04-27 05:20:36,986] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-04-27 05:20:36,988] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-04-27 05:20:36,988] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-04-27 05:23:32,878] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@4b6995df, name=log4j:logger=kafka.controller (kafka.controller)
[2021-04-27 05:23:55,894] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-04-27 05:23:55,978] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2021-04-27 05:23:55,987] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2021-04-27 05:23:56,006] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2021-04-27 05:23:56,011] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2021-04-27 05:23:56,016] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2021-04-27 05:23:56,033] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 173) (kafka.controller.KafkaController)
[2021-04-27 05:23:56,077] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2021-04-27 05:23:56,196] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2021-04-27 05:23:56,219] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2021-04-27 05:23:56,220] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2021-04-27 05:23:56,221] INFO [Controller id=0] Current list of topics in the cluster: HashSet(my_topic_store, my_topic_menu, my_topic_festival, __consumer_offsets, my_topic_users) (kafka.controller.KafkaController)
[2021-04-27 05:23:56,222] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2021-04-27 05:23:56,238] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2021-04-27 05:23:56,257] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2021-04-27 05:23:56,258] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2021-04-27 05:23:56,258] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2021-04-27 05:23:56,262] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2021-04-27 05:23:56,288] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2021-04-27 05:23:56,567] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-H380DM7.mshome.net:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2021-04-27 05:23:56,570] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2021-04-27 05:23:56,857] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-04-27 05:23:57,062] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-04-27 05:23:57,064] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=my_topic_menu,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=my_topic_festival,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=my_topic_users,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=my_topic_store,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2021-04-27 05:23:57,065] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2021-04-27 05:23:57,119] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2021-04-27 05:23:57,128] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, my_topic_festival-0 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, my_topic_store-0 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, my_topic_menu-0 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, my_topic_users-0 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2021-04-27 05:23:57,130] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2021-04-27 05:23:57,143] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2021-04-27 05:23:57,144] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2021-04-27 05:23:57,145] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2021-04-27 05:23:57,148] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2021-04-27 05:23:57,153] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2021-04-27 05:23:57,192] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2021-04-27 05:24:02,196] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-04-27 05:24:02,197] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-04-27 05:24:02,203] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-04-27 05:24:02,204] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-04-27 05:25:36,284] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2021-04-27 05:25:36,285] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2021-04-27 05:25:36,286] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2021-04-27 05:25:36,292] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),my_topic_festival-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),my_topic_store-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),my_topic_menu-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),my_topic_users-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2021-04-27 05:25:37,632] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-04-27 05:25:37,633] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-04-27 05:25:37,633] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-04-27 05:25:37,634] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2021-04-27 05:25:37,634] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2021-04-27 05:25:37,637] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2021-04-27 05:25:37,638] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2021-04-27 05:25:37,638] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2021-04-27 05:25:37,638] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2021-04-27 05:25:37,638] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2021-04-27 05:25:37,640] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2021-04-27 05:26:05,658] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@4b6995df, name=log4j:logger=kafka.controller (kafka.controller)
[2021-04-27 05:26:14,349] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-04-27 05:26:14,422] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2021-04-27 05:26:14,437] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2021-04-27 05:26:14,536] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2021-04-27 05:26:14,543] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2021-04-27 05:26:14,547] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2021-04-27 05:26:14,552] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2021-04-27 05:26:14,576] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 24) (kafka.controller.KafkaController)
[2021-04-27 05:26:14,581] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2021-04-27 05:26:14,592] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2021-04-27 05:26:14,610] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2021-04-27 05:26:14,613] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2021-04-27 05:26:14,614] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2021-04-27 05:26:14,615] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2021-04-27 05:26:14,616] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2021-04-27 05:26:14,622] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2021-04-27 05:26:14,623] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2021-04-27 05:26:14,624] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2021-04-27 05:26:14,625] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2021-04-27 05:26:14,628] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2021-04-27 05:26:14,684] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2021-04-27 05:26:14,686] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-04-27 05:26:14,708] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-H380DM7.mshome.net:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2021-04-27 05:26:14,778] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-04-27 05:26:14,782] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2021-04-27 05:26:14,802] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2021-04-27 05:26:14,803] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2021-04-27 05:26:14,824] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2021-04-27 05:26:14,825] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2021-04-27 05:26:14,981] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2021-04-27 05:26:14,992] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2021-04-27 05:26:14,995] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2021-04-27 05:26:14,999] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2021-04-27 05:26:15,018] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2021-04-27 05:26:15,145] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2021-04-27 05:26:15,501] INFO [Controller id=0] New topics: [Set(my_topic_festival)], deleted topics: [HashSet()], new partition replica assignment [Map(my_topic_festival-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-04-27 05:26:15,503] INFO [Controller id=0] New partition creation callback for my_topic_festival-0 (kafka.controller.KafkaController)
[2021-04-27 05:26:15,761] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-04-27 05:26:15,762] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2021-04-27 05:26:16,301] INFO [Controller id=0] New topics: [Set(my_topic_users)], deleted topics: [HashSet()], new partition replica assignment [Map(my_topic_users-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-04-27 05:26:16,302] INFO [Controller id=0] New partition creation callback for my_topic_users-0 (kafka.controller.KafkaController)
[2021-04-27 05:26:16,747] INFO [Controller id=0] New topics: [Set(my_topic_store)], deleted topics: [HashSet()], new partition replica assignment [Map(my_topic_store-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-04-27 05:26:16,748] INFO [Controller id=0] New partition creation callback for my_topic_store-0 (kafka.controller.KafkaController)
[2021-04-27 05:26:16,878] INFO [Controller id=0] New topics: [HashSet(my_topic_menu)], deleted topics: [HashSet()], new partition replica assignment [Map(my_topic_menu-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-04-27 05:26:16,878] INFO [Controller id=0] New partition creation callback for my_topic_menu-0 (kafka.controller.KafkaController)
[2021-04-27 05:26:20,196] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-04-27 05:26:20,198] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-04-27 05:26:20,237] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-04-27 05:26:20,240] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-04-27 05:31:20,255] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-04-27 05:31:20,255] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-04-27 05:31:20,259] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-04-27 05:31:20,259] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-04-27 05:33:59,087] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2021-04-27 05:33:59,087] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2021-04-27 05:33:59,088] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2021-04-27 05:33:59,097] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),my_topic_festival-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),my_topic_store-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),my_topic_menu-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),my_topic_users-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2021-04-27 05:34:01,060] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-04-27 05:34:01,061] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-04-27 05:34:01,061] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-04-27 05:34:01,062] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2021-04-27 05:34:01,063] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2021-04-27 05:34:01,065] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2021-04-27 05:34:01,068] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2021-04-27 05:34:01,068] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2021-04-27 05:34:01,068] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2021-04-27 05:34:01,068] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2021-04-27 05:34:01,071] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2021-04-27 05:34:39,883] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@4b6995df, name=log4j:logger=kafka.controller (kafka.controller)
[2021-04-27 05:34:48,005] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-04-27 05:34:48,060] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2021-04-27 05:34:48,082] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2021-04-27 05:34:48,218] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2021-04-27 05:34:48,225] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2021-04-27 05:34:48,230] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2021-04-27 05:34:48,236] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2021-04-27 05:34:48,260] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 24) (kafka.controller.KafkaController)
[2021-04-27 05:34:48,278] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2021-04-27 05:34:48,291] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2021-04-27 05:34:48,317] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2021-04-27 05:34:48,318] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2021-04-27 05:34:48,319] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2021-04-27 05:34:48,320] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2021-04-27 05:34:48,328] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2021-04-27 05:34:48,329] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2021-04-27 05:34:48,330] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2021-04-27 05:34:48,331] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2021-04-27 05:34:48,343] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2021-04-27 05:34:48,346] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2021-04-27 05:34:48,372] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2021-04-27 05:34:48,378] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-04-27 05:34:48,414] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-H380DM7.mshome.net:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2021-04-27 05:34:48,439] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-04-27 05:34:48,447] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2021-04-27 05:34:48,449] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2021-04-27 05:34:48,450] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2021-04-27 05:34:48,458] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2021-04-27 05:34:48,458] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2021-04-27 05:34:48,495] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2021-04-27 05:34:48,496] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2021-04-27 05:34:48,498] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2021-04-27 05:34:48,498] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2021-04-27 05:34:48,501] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2021-04-27 05:34:48,555] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2021-04-27 05:34:48,639] INFO [Controller id=0] New topics: [Set(my_topic_store)], deleted topics: [HashSet()], new partition replica assignment [Map(my_topic_store-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-04-27 05:34:48,640] INFO [Controller id=0] New partition creation callback for my_topic_store-0 (kafka.controller.KafkaController)
[2021-04-27 05:34:48,944] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-04-27 05:34:48,945] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2021-04-27 05:34:53,562] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-04-27 05:34:53,562] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-04-27 05:34:53,568] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-04-27 05:34:53,569] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-04-27 05:36:01,523] INFO [Controller id=0] New topics: [Set(my_topic_users)], deleted topics: [HashSet()], new partition replica assignment [Map(my_topic_users-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-04-27 05:36:01,523] INFO [Controller id=0] New partition creation callback for my_topic_users-0 (kafka.controller.KafkaController)
[2021-04-27 05:36:09,640] INFO [Controller id=0] New topics: [Set(my_topic_festival)], deleted topics: [HashSet()], new partition replica assignment [Map(my_topic_festival-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-04-27 05:36:09,641] INFO [Controller id=0] New partition creation callback for my_topic_festival-0 (kafka.controller.KafkaController)
[2021-04-27 05:36:21,474] INFO [Controller id=0] New topics: [HashSet(my_topic_menu)], deleted topics: [HashSet()], new partition replica assignment [Map(my_topic_menu-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-04-27 05:36:21,474] INFO [Controller id=0] New partition creation callback for my_topic_menu-0 (kafka.controller.KafkaController)
[2021-04-27 05:39:53,585] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-04-27 05:39:53,585] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-04-27 05:39:53,587] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-04-27 05:39:53,587] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-04-27 05:44:53,594] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-04-27 05:44:53,594] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-04-27 05:44:53,595] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-04-27 05:44:53,595] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-04-27 05:49:53,634] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-04-27 05:49:53,634] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-04-27 05:49:53,638] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-04-27 05:49:53,639] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
